From sklearn.feature extraction.text import Countvectorizer
from sklearn.feature extraction.text import TfidfTransformer 
from sklearn.naive_bayes import Multinomialnb
from sklearn.datasets import fetch_20newsgroups
doc train=fetch_20newsgroups (subset='train')
attribute=doc_train.target_names
from sklearn.pipeline import Pipeline
text=Pipeline ([('vect', CountVectorizer ()), ('tfidf',TfidfTransformer), ('clf', MultinomialNB ())])
Lext.fit (doc_train.data, doc_train.target)
doc test-fetch_20newsgroups (subset='test')
predict=text.predict (doc_test.data)
statement=['computer are incredible machine', 'microsoft windows', india and christianity', 'ak47 is strong ']
classification=[attribute(value] for value in text.predict (statement)
print (classification)
